{"version":3,"sources":["../../src/pages/users/phone-verification/phone-verification.module.ts","../../src/pages/users/phone-verification/phone-verification.ts"],"names":[],"mappings":"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","file":"20.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { PhoneVerificationPage } from './phone-verification';\n\n@NgModule({\n  declarations: [\n    PhoneVerificationPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(PhoneVerificationPage),\n  ],\n  exports: [\n    PhoneVerificationPage,\n  ]\n})\nexport class PhoneVerificationModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/users/phone-verification/phone-verification.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController } from 'ionic-angular';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AngularTokenService } from 'angular-token';\nimport { Events } from 'ionic-angular';\nimport { UserApi } from '../../../providers/user-api';\nimport { ResponseUtility } from '../../../providers/response-utility';\n\n@IonicPage()\n@Component({\n  selector: 'phone-verification',\n  templateUrl: 'phone-verification.html',\n})\nexport class PhoneVerificationPage {\n\n  verification_code_sent = false;\n  slideOneForm: FormGroup;\n  current_user = null;\n  verification_code = null;\n  error_msg = null;\n\n  constructor(public navCtrl: NavController,\n    public navParams: NavParams,\n    public formBuilder: FormBuilder,\n    public userApi: UserApi,\n    public loadingController: LoadingController,\n    public respUtility: ResponseUtility,\n    public events: Events,\n    private tokenService: AngularTokenService) {\n    this.slideOneForm = formBuilder.group({\n      verification_code: ['', Validators.compose([Validators.maxLength(5), Validators.minLength(5),Validators.required])],\n    });\n\n    this.current_user = this.tokenService.currentUserData;\n    this.verification_code_sent = this.current_user.sms_verification_code != null;\n\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad PhoneVerification');\n    this.respUtility.trackView(\"PhoneVerification\");\n  }\n\n  send_verification_code() {\n    this.respUtility.trackEvent(\"PhoneVerification\", \"SendCode\", \"click\");\n    this.verification_code_sent = true;\n    let loader = this.loadingController.create({\n      content: 'Sending Verification Code ...'\n    });\n    loader.present();\n\n    this.userApi.sendVerificationCode().subscribe(\n      resp => { console.log(resp); },\n      error => {\n        this.respUtility.showFailure(error);\n        console.log(error);\n        this.verification_code_sent = false;\n        loader.dismiss();\n      },\n      () => { loader.dismiss() }\n    );\n  }\n\n  confirmSendVerification() {\n    this.respUtility.confirmAction(this.send_verification_code.bind(this), null, \"This will send an SMS to your registered mobile number. Proceed?\");\n  }\n\n\n  verifiy_code() {\n    this.respUtility.trackEvent(\"PhoneVerification\", \"VerifyCode\", \"click\");\n    let loader = this.loadingController.create({\n      content: 'Verifiying Code ...'\n    });\n    loader.present();\n\n\n    this.userApi.confirmVerificationCode(this.verification_code).subscribe(\n      resp => { \n        console.log(resp); \n        if(resp[\"verified\"] == true) {\n          this.events.publish(\"current_user:reload\");\n          this.respUtility.showSuccess(\"Phone verified successfully\");\n          this.navCtrl.pop();\n        } else {\n          this.error_msg = \"The code entered was not valid. Please try again\";\n          this.respUtility.showWarning(this.error_msg);\n          this.verification_code_sent = false;\n        }\n      },\n      error => {\n        this.respUtility.showFailure(error);\n        console.log(error); \n        this.verification_code_sent = false; \n        loader.dismiss();\n      },\n      () => { loader.dismiss() }\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/users/phone-verification/phone-verification.ts"],"sourceRoot":""}